pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'devops-fa1-project-ansh'
        DOCKER_TAG = "${BUILD_NUMBER}"
        APP_PORT = '8080'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                bat """
                    docker build -t %DOCKER_IMAGE%:%DOCKER_TAG% .
                    docker tag %DOCKER_IMAGE%:%DOCKER_TAG% %DOCKER_IMAGE%:latest
                """
            }
        }
        
        stage('Test Application') {
            steps {
                echo 'Testing the application...'
                bat """
                    REM Start test container
                    docker run -d --name test-container-%BUILD_NUMBER% -p %APP_PORT%:80 %DOCKER_IMAGE%:%DOCKER_TAG%
                    
                    REM Wait for container to start
                    timeout /t 10 /nobreak
                    
                    REM Test if application is responding
                    curl -f http://localhost:%APP_PORT% || exit /b 1
                    
                    REM Clean up test container
                    docker stop test-container-%BUILD_NUMBER%
                    docker rm test-container-%BUILD_NUMBER%
                """
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
                bat """
                    REM Stop existing staging container
                    docker stop staging-app 2>nul || echo "No staging container to stop"
                    docker rm staging-app 2>nul || echo "No staging container to remove"
                    
                    REM Deploy to staging
                    docker run -d --name staging-app -p 8081:80 %DOCKER_IMAGE%:%DOCKER_TAG%
                    
                    echo "Application deployed to staging: http://localhost:8081"
                """
            }
        }
        
        stage('Deploy to Production') {
            when {
                branch 'main'
            }
            input {
                message "Deploy to production?"
                ok "Deploy"
            }
            steps {
                echo 'Deploying to production environment...'
                bat """
                    REM Stop existing production container
                    docker stop production-app 2>nul || echo "No production container to stop"
                    docker rm production-app 2>nul || echo "No production container to remove"
                    
                    REM Deploy to production
                    docker run -d --name production-app -p 80:80 %DOCKER_IMAGE%:%DOCKER_TAG%
                    
                    echo "Application deployed to production: http://localhost"
                """
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline execution completed'
        }
        success {
            echo 'Pipeline succeeded! ✅'
            echo 'Application is ready for use'
        }
        failure {
            echo 'Pipeline failed! ❌'
            bat """
                REM Clean up failed test containers
                docker stop test-container-%BUILD_NUMBER% 2>nul || echo "No test container to clean"
                docker rm test-container-%BUILD_NUMBER% 2>nul || echo "No test container to remove"
            """
        }
    }
}
